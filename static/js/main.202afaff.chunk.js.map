{"version":3,"sources":["app/actionTypes.js","app/action.js","app/component/Todo.js","app/containers/todo.js","app/component/TodoList.js","app/constants.js","app/selector.js","app/containers/todoList.js","app/component/Filter.js","app/containers/filter.js","app/TodoApp.js","app/reducers/todos.js","app/reducers/filter.js","app/reducers/index.js","index.js"],"names":["ADD_TODO","DELETE_TODO","DELETE_ALL","SET_FILTER","TOGGLE_TODO","todoId","Title","styled","h1","Button","button","FlexContainer","div","TodoInput","input","connect","addTodo","content","type","payload","id","useState","setInput","onChange","e","target","value","onClick","TodoContainer","Todo","span","VISIBILITY_FILTERS","getTodosByFilterState","store","allTodos","todoList","todos","getTodoList","filter","state","getFilterState","todo","isDone","deleteTodo","toggleTodo","map","index","className","ToggleButton","RedButton","setFilter","deleteAll","Container","TodoApp","initialState","combineReducers","action","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.202afaff.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\nexport const DELETE_TODO = 'DELETE_TODO'\nexport const DELETE_ALL = 'DELETE_ALL'\nexport const SET_FILTER = 'SET_FILTER'\nexport const EDIT_TODO = 'EDIT_TODO'\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\n","import {\n  ADD_TODO,\n  DELETE_TODO,\n  TOGGLE_TODO,\n  SET_FILTER,\n  DELETE_ALL,\n} from './actionTypes'\n\nlet todoId = 0\nexport const addTodo = (content) => {\n  return {\n    type: ADD_TODO,\n    payload: {\n      id: ++todoId,\n      content,\n    },\n  }\n}\nexport const deleteTodo = (id) => {\n  return {\n    type: DELETE_TODO,\n    payload: { id },\n  }\n}\nexport const deleteAll = () => {\n  return {\n    type: DELETE_ALL,\n  }\n}\nexport const toggleTodo = (id) => ({\n  type: TOGGLE_TODO,\n  payload: { id },\n})\nexport const setFilter = (filter) => ({ type: SET_FILTER, payload: { filter } })\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst Title = styled.h1``\nconst Button = styled.button`\n  padding: 6px 12px;\n  margin-left: 10px;\n  border: 1px solid black;\n  border-radius: 3px;\n  background-color: white;\n`\nconst FlexContainer = styled.div`\n  display: flex;\n  margin-top: 10px;\n`\nconst TodoInput = styled.input`\n  width: 50%;\n  height: 40px;\n`\nexport default function Todos({ addTodo }) {\n  const [input, setInput] = useState('')\n  return (\n    <>\n      <Title>My last Todo-List</Title>\n      <FlexContainer>\n        <TodoInput\n          onChange={(e) => {\n            setInput(e.target.value)\n          }}\n          value={input}\n        />\n        <Button\n          onClick={() => {\n            addTodo(input)\n            setInput('')\n          }}\n        >\n          Add Todo\n        </Button>\n      </FlexContainer>\n    </>\n  )\n}\n","import { addTodo } from '../action'\nimport { connect } from 'react-redux'\nimport Todos from '../component/Todo'\nexport default connect(null, { addTodo })(Todos)\n","import styled from 'styled-components'\n\nconst TodoContainer = styled.div`\n  margin: 20px auto;\n  justify-content: space-between;\n  flex-direction: row;\n  .done {\n    text-decoration: line-through;\n    color: lightgray;\n  }\n`\nconst Todo = styled.span`\n  padding-right: 30px;\n  max-width: 80%;\n`\nexport default function TodoList({ todos, deleteTodo, toggleTodo }) {\n  return todos.map((todo, index) => (\n    <TodoContainer key={index}>\n      <Todo\n        onClick={() => {\n          toggleTodo(todo.id)\n        }}\n        className={todo.isDone ? 'done' : ''}\n      >\n        {todo.id}. {todo.content}\n      </Todo>\n      <button\n        onClick={() => {\n          deleteTodo(todo.id)\n        }}\n      >\n        delete\n      </button>\n    </TodoContainer>\n  ))\n}\n","export const VISIBILITY_FILTERS = {\n  ALL: 'all',\n  COMPLETE: 'complete',\n  INCOMPLETE: 'incomplete',\n}\n","import { VISIBILITY_FILTERS } from './constants'\nexport const getTodoList = (store) => store.todoList.todos\nexport const getFilterState = (store) => store.filter.state\n\nexport const getTodosByFilterState = (store) => {\n  const allTodos = getTodoList(store)\n  const filterState = getFilterState(store)\n  switch (filterState) {\n    case VISIBILITY_FILTERS.ALL:\n      return allTodos\n    case VISIBILITY_FILTERS.COMPLETE:\n      return allTodos.filter((todo) => todo.isDone)\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter((todo) => !todo.isDone)\n    default:\n      return allTodos\n  }\n}\n","import { deleteTodo, toggleTodo } from '../action'\nimport { connect } from 'react-redux'\nimport TodoList from '../component/TodoList'\nimport { getTodosByFilterState } from '../selector'\nconst mapStateToProps = (store) => {\n  return {\n    todos: getTodosByFilterState(store),\n  }\n}\nexport default connect(mapStateToProps, { deleteTodo, toggleTodo })(TodoList)\n","import styled from 'styled-components'\nimport { VISIBILITY_FILTERS } from '../constants'\n\nconst FlexContainer = styled.div`\n  display: flex;\n  margin-top: 35px;\n  .active {\n    color: white;\n    background-color: #0d6efd;\n  }\n`\nconst Button = styled.button`\n  padding: 6px 12px;\n  margin-left: 20px;\n  border: 1px solid black;\n  border-radius: 3px;\n  background-color: white;\n`\nconst ToggleButton = styled(Button)`\n  background-color: white;\n  border-color: #0d6efd;\n  color: #0d6efd;\n  :hover {\n    color: white;\n    background-color: #0d6efd;\n    transition: 0.3s;\n  }\n`\nconst RedButton = styled(Button)`\n  margin-left: 0;\n  background: red;\n  color: white;\n  border: none;\n`\nexport default function Filter({ state, setFilter, deleteAll }) {\n  return (\n    <FlexContainer>\n      <RedButton\n        onClick={() => {\n          deleteAll()\n        }}\n      >\n        清空 Todo\n      </RedButton>\n      <ToggleButton\n        className={state === 'all' ? 'active' : ''}\n        onClick={() => {\n          setFilter(VISIBILITY_FILTERS.ALL)\n        }}\n      >\n        全部\n      </ToggleButton>\n      <ToggleButton\n        className={state === 'complete' ? 'active' : ''}\n        onClick={() => {\n          setFilter(VISIBILITY_FILTERS.COMPLETE)\n        }}\n      >\n        已完成\n      </ToggleButton>\n      <ToggleButton\n        className={state === 'incomplete' ? 'active' : ''}\n        onClick={() => {\n          setFilter(VISIBILITY_FILTERS.INCOMPLETE)\n        }}\n      >\n        未完成\n      </ToggleButton>\n    </FlexContainer>\n  )\n}\n","import { setFilter, deleteAll } from '../action'\nimport { connect } from 'react-redux'\nimport Filter from '../component/Filter'\nconst mapStateToProps = (store) => {\n  return {\n    state: store.filter.state,\n  }\n}\nexport default connect(mapStateToProps, { setFilter, deleteAll })(Filter)\n","import React from 'react'\nimport Todo from './containers/todo'\nimport TodoList from './containers/todoList'\nimport styled from 'styled-components'\nimport Filter from './containers/filter'\n\nconst Container = styled.div`\n  margin: 50px auto;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  max-width: 800px;\n`\nexport default function TodoApp() {\n  return (\n    <Container>\n      <Todo />\n      <Filter />\n      <TodoList />\n    </Container>\n  )\n}\n","/* eslint-disable */\nimport { ADD_TODO, DELETE_ALL, DELETE_TODO, TOGGLE_TODO } from '../actionTypes'\n\nconst initialState = {\n  todos: [],\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { id, content } = action.payload\n      const { todos } = state\n      return {\n        todos: [...todos, { id, content, isDone: false }],\n      }\n    }\n    case DELETE_TODO: {\n      const { id } = action.payload\n      const { todos } = state\n      return {\n        todos: todos.filter((todo) => {\n          if (todo.id !== id) return todo\n          return\n        }),\n      }\n    }\n    case TOGGLE_TODO: {\n      const { todos } = state\n      const { id } = action.payload\n      return {\n        todos: todos.map((todo) => {\n          if (todo.id !== id) return todo\n          return {\n            id: todo.id,\n            content: todo.content,\n            isDone: todo.isDone === false ? true : false,\n          }\n        }),\n      }\n    }\n    case DELETE_ALL: {\n      return {\n        todos: [],\n      }\n    }\n    default:\n      return state\n  }\n}\n","/* eslint-disable */\nimport { SET_FILTER } from '../actionTypes'\nimport { VISIBILITY_FILTERS } from '../constants'\nconst initialState = {\n  state: VISIBILITY_FILTERS.ALL,\n}\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_FILTER: {\n      return {\n        state: action.payload.filter,\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport todoList from './todos'\nimport filter from './filter'\n\nexport default combineReducers({ todoList, filter })\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport TodoApp from './app/TodoApp'\nimport rootReducer from './app/reducers'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createStore, applyMiddleware } from 'redux'\n\n//setting up store with middleware and redux dev tools viewers\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware()\n    // other store enhancers if any\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}